using glider.dto;
using Glider;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace create_local_file
{
    public class LocalCreate
    {
        public const string createPath = "./AutoGenerated/Assets/LocalCreated";

        public void CreateFile(string jsonFile)
        {
            if(Directory.Exists(createPath) == false)
            {
                Directory.CreateDirectory(createPath);
            }

            var replaceString = "Assets/Glider/Core/Scripts/SerializableData";

            RequestDataDto requestData = JsonConvert.DeserializeObject<RequestDataDto>(jsonFile);
            var googleSheet = new GliderGoogleSheetData(requestData);
            var csFileInfos = googleSheet.WriteAllCsFile(StaticDataCategory.Shared);

            foreach (var file in csFileInfos.files)
            {
                file.filePath = file.filePath.Replace(replaceString, createPath);
                if(Directory.Exists(file.filePath) == false)
                {
                    Directory.CreateDirectory(file.filePath);
                }
                File.WriteAllText(Path.Combine(file.filePath, $"{file.fileName}.cs"), file.content);
            }
        }
    }
}
